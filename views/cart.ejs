<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 font-sans">

    <!-- Back to Products Link -->
    <div class="container mx-auto p-6">
        <a href="/" class="text-blue-500 hover:text-blue-700 mb-4 inline-block">&larr; Back to Products</a>
    </div>

    <!-- Cart Section -->
    <div class="container mx-auto p-6 bg-white rounded-lg shadow-lg">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">Your Cart</h1>

        <!-- Check if cart has items -->
        <% if (cartItems.length > 0) { %>
        <div class="space-y-6">
            <!-- Loop through cart items -->
            <% cartItems.forEach(item => { %>
            <div class="flex items-center bg-gray-100 p-4 rounded-lg shadow-md">
                <!-- Product Image -->
                <img src="<%= item.product.thumbnail %>" alt="<%= item.product.name %>" class="w-24 h-24 object-contain rounded-lg mr-6">

                <!-- Product Details -->
                <div class="flex-grow">
                    <h2 class="text-lg font-semibold text-gray-800"><%= item.product.name %></h2>
                    <p class="text-sm text-gray-600">Category: <%= item.product.category.name %></p>
                    <% if( item.product.brand ) { %>
                   <p class="text-sm text-gray-600">Category: <%= item.product.brand %></p>
                   <% } %>
                    <p class="text-sm text-gray-600">Price: ₹<%= item.product.price.toFixed(2) %></p>
                    <p class="text-sm text-gray-600">Subtotal: ₹<%= (item.product.price * item.quantity).toFixed(2) %></p>
                </div>

                <!-- Quantity Selector -->
                <div class="flex items-center">
                    <p class="text-sm text-gray-600"> quantity: &nbsp;</p>

                    <input type="number" value="<%= item.quantity %>" min="1" class="w-16 text-center border border-gray-300 rounded-lg mr-4" id="quantity_" onchange="updateQuantity('<%= item._id %>','<%= item.product._id  %>')">
                    <button class="text-red-500 hover:text-red-700" onclick="removeFromCart('<%= item._id %>')">Remove</button>
                </div>
            </div>
            <% }) %>

            <!-- Cart Summary -->
            <div class="p-4 bg-gray-100 rounded-lg shadow-md text-right">
                <p class="text-xl font-semibold text-gray-800">Total: ₹<%= totalAmount.toFixed(2) %></p>
                <a href="/checkout" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition mt-4 inline-block">Proceed to Checkout</a>
            </div>
        </div>
        <% } else { %>
            <div class="bg-white shadow-md rounded-lg p-6 flex flex-col items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h18M9 3v18m6-18v18M3 3l18 18" />
                </svg>
                <h2 class="text-lg font-semibold text-gray-700">Your Cart is Empty</h2>
                <p class="text-gray-500 mt-2">It seems you haven't added any items to your cart yet. Start exploring our products!</p>
                <a href="/" class="mt-4 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
                    Shop Now
                </a>
            </div>
            
        <% } %>
    </div>

    <!-- JavaScript for Updating Quantity and Removing Items -->
    <script>
    // Update quantity in the cart
    async function updateQuantity(cartItemId,productId) {
        const quantity = document.getElementById('quantity_').value;
        try {
            const response = await fetch(`/cart/update/${cartItemId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ quantity: parseInt(quantity),productId }),
            });

            const data = await response.json();
            if (data.success) {
                // alert('Cart updated successfully');
                location.reload(); // Reload the page to update the cart
            } else {
                alert('Error updating cart');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while updating the cart');
        }
    }

    // Remove item from the cart
    async function removeFromCart(cartItemId) {
        const confirmRemoval = confirm('Are you sure you want to remove this item from your cart?');
        if (confirmRemoval) {
            try {
                const response = await fetch(`/cart/remove/${cartItemId}`, {
                    method: 'DELETE',
                });

                const data = await response.json();
                if (data.success) {
                    alert('Item removed from cart');
                    location.reload(); // Reload the page to update the cart
                } else {
                    alert('Error removing item');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while removing the item');
            }
        }
    }
    </script>

</body>
</html>
